use APR::Table;
use APR::Bucket;
use APR::Brigade;
use APR::PerlIO;
use APR::Error;
use Apache::Request;

package Apache::Upload;

sub io {
    tie local (*FH), "Apache::Upload::Brigade", shift->bb;
    return bless *FH{IO}, "Apache::Upload::IO";
}

sub fh {
    my $upload = shift;
    open my $fh, "<", $upload->tempname
        or die "Can't open ", $upload->tempname, ": ", $!;
    binmode $fh;
    return $fh;
}


package Apache::Upload::Error;
push our(@ISA), qw/APR::Error Apache::Upload/;

package Apache::Upload::Table;
push our(@ISA), "APR::Table";
BEGIN {
    my @BAD_METHODS = qw/compress merge overlap/;
    for (@BAD_METHODS) {
        no strict;
        next unless my $meth = APR::Table->can($_);
        *{$_} = sub {die __PACKAGE__ ."::",  "$_: unsafe operation"};
    }
}

package Apache::Upload::Brigade;
push our(@ISA), "APR::Brigade";

package Apache::Upload::IO;
push our(@ISA), ();
