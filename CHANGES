/** @page CHANGES

@section 2.01-dev Changes with libapreq2-2.01-dev

- October 26, 2003 - C API [joes]

Incorporate libapreq_cgi into libapreq2 as the default environment,
and add apreq_env_t and initializer apreq_env_module() to manage the
environment at runtime (determining the environment at load-time
was problematic on non-ELF systems).


@section 2.00-dev Changes with libapreq2-2.00-dev

- October 24, 2003 - C API: libapreq_cgi.c [randyk, joes]

CGI environment defined by env/libapreq_cgi.c is functional
(with tests added to env/t).  This library may soon be incorporated
directly into libapreq2 as a default enviroment.

- October 23, 2003 - C API: mod_apreq.c [joes]

Added ctx->saw_eos to ensure we don't read from upstream filters
after receiving an eos bucket.  Otherwise it was possible for
two eos buckets to appear when a prefetch read is involved, which
breaks other modules like mod_proxy.  This bug was uncovered by
Philippe Chiasson.  mod_apreq's apreq_env_majic_number bumped to
reflect the added fixes.

- October 17, 2003 - configure: --enable-perl-glue [joes]

The --enable-perl-glue option integrates the perl glue into the 
normal Unix build cycle.  It is disabled by default, but is silently 
reenabled if the user configures the source tree via Makefile.PL.

- October 14, 2003 - C API [joes]

Added apreq_header_attribute() and fixed mfd parser to allow 
"charset" attribute to appear in the Content-Type header.  Sven
Geisler points out that Opera 7.20 does generate such headers. 

- October 14, 2003 - C API [joes]

Added versioning API following http://apr.apache.org/versioning.html
apreq_env renamed apreq_env_name, and apreq_env_magic_number added
to provide versioning for environments (modules).  The header files 
are now installed to "include/apreq2", and the library is renamed 
"libapreq2". Also added an apreq2-config script based on apu-config.

- October 8, 2003 - configure: static mod_apreq.c [Bojan Smojver, joes]

Add --with-apache2-src configure option, along with --with-apr-config
and --with-apu-config, and provide support for compiling mod_apreq 
into httpd as a static apache module.

- October 1, 2003 - C API: mod_apreq.c [joes]

Support for internal redirects added to the mod_apreq filter.
This ensures any POST data prefetched in the main request 
gets passed along to the subrequest handler(s).

- July 18, 2003 - C bugfix: apreq_decode [Graham Clark]

If the source and destination strings are represented by the same
pointer - e.g. if called as apreq_unescape(s) - string s is modified
incorrectly in general.  Patch includes new unit test.


- July 16, 2003 - Perl API [joes]

Added $req->parse, $req->status, & "preparse" logic 
to $req->param & $req->upload.

- July 16, 2003 - C API [joes]

Added "preparse" logic to apreq_params & apreq_uploads
to bring behavior in line with libapreq-1.x.

- July 15, 2003 - C API [joes]

Dropped param->charset.
Make apreq_brigade_concat public, so mod_apreq can use it
for its ctx->spool brigade.

- July 14, 2003 - Documentation [joes]

Updated Cookie_pod to reflect API changes over v1.X.

- June 30, 2003 - Documentation [joes]

Added doxygen links to Apache::Request and Apache::Cookie 
perl docs.

- June 30, 2003 - C API [joes]

Added apreq_copy_brigade(bb) to apreq.h.

- June 27, 2003 - C API [joes]

The new filter-based design required a complete 
departure from libapreq-1.X codebase. libapreq-2
is based solely on APR, and to be fully functional, 
requires a supporting environment similar to Apache-2.
A person wishing to port libapreq-2 to a new environment
needs to provide definitions for the declarations in apreq_env.h.

- June 27, 2003 - Perl API [joes]

Aggregates are always collected into an APR::Table-based package.
New table packages: Apache::Cookie::Table, Apache::Request::Table,
and Apache::Upload::Table.

- June 27, 2003 - Perl API [joes]

Apache::Cookie->fetch now requires an "environment" argument ($r).
Its return value is blessed into the Apache::Cookie::Jar class.

- June 27, 2003 - Perl API [joes]

Two new request lookup functions:
  -# $req->args - param lookup using only the query string
  -# $req->body - param lookup using only the POST data


**/