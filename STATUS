APREQ 2.0 STATUS:                                              -*-text-*-
Last modified at [$Date: 2003/06/12 05:23:43 $]

     2.0.0  in development

Contributors looking for a mission:

    * just do an egrep on "TODO" or "XXX" and see what's there


CURRENT RELEASE NOTES:

    * This is unreleased alpha software.


RELEASE SHOWSTOPPERS:

    * Missing API components: 

        1. Key safety features ("disable uploads", "max body", "temp dir",
           etc.) are unimplemented.

        2. File uploads are `buffered' into a bucket brigade.
           The buckets are currently heap-allocated, which 
           causes the entire file to be spooled into RAM.
           This behavior is unsafe, since large uploads can
           DOS the server by exhausting RAM.

           [joes] How about writing an upload hook?


        3. The req->upload API is unimplemented.


CURRENT VOTES:



TODO:

    * Add documentation system.

      [joes] suggests:

      * doxygen for C API (header comments).

      * perldoc for Perl glue (pod).
    

    * Populate the glue/ directory.

      * Port apreq-1's Apache::Test tests for the Perl API into glue/perl/t.

      * ExtUtils::XSBuilder framework for glue/perl is in place.
        Now perl developers should be able to build & compile
        Request.xs & Cookie.xs.  The Apache::Test tests from apreq-1
        are really needed now to establish the API, and make it
        play nice with (& without) modperl-2.

    * Add XForms logic to the mfd parser.

  * symbol exports files:
    - win32 now has hardcoded .def files (need to automate, e.g. based
      on exports.c ala httpd-2.0)
    - aix needs .exp files 


OPEN ISSUES:

  Documentation system.

  Should we bundle an apr-based "application/xml" parser?  
  If so, how should we parse the xml data into an apr_table?


BUGS:

  XXX


WISH LIST:

     [joes] I wish folks would contribute some glue code for
     one of these:

              php, 

              mod_tcl, 

              mod_python, 

              mod_jk, 

              mod_ruby,

              mod_parrot.

     Someone should also adopt env/libapreq_cgi.c and ensure it
     donesn't fall into disrepair by adding some tests for it to env/t.
