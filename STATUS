APREQ 2.0 STATUS:                                              -*-text-*-
Last modified at [$Date: 2003/06/22 15:34:43 $]

     2.0.0  in development

Contributors looking for a mission:

    * just do an egrep on "TODO" or "XXX" and see what's there


CURRENT RELEASE NOTES:

    * This is unreleased alpha software.


RELEASE SHOWSTOPPERS:

    * Missing API components: 

        1. Key safety features ("disable uploads", "max body", "temp dir",
           etc.) are not fully unimplemented.


CURRENT VOTES:



TODO:

    * Settle on the Perl API and start tracking CHANGES.

    * Improve documentation system:

      - doxygen for C API (header comments).
      - perldoc for Perl glue (pod).
    

    * Populate the glue/ directory.

      - Improve test suite to ensure all glue/perl/t tests pass.
      - ExtUtils::XSBuilder framework for glue/perl is in place.
        Now perl developers should be able to build & compile
        Request.xs & Cookie.xs.

    * Add XForms logic to the mfd parser.

    * symbol exports files:
      - win32 now has hardcoded .def files (need to automate, e.g. based
        on exports.c ala httpd-2.0)
      - aix needs .exp files

    * on Win32, figure out how to build things so Apache::Cookie
      and Apache::Request don't need to be linked against mod_apreq
      to resolve missing apreq_env* symbols. 

    * perl ../build/test_config.pl -apxs ...  
      ignores the command-line (apxs) arguments on some platforms.
      This prevents the env/ tests from building on those systems.


OPEN ISSUES:

    * Documentation system.

    * Should we bundle an apr-based "application/xml" parser?  
      If so, how should we parse the xml data into an apr_table?

    * How should the Perl API work in a CGI context?
      Will users need to preload an "CGI environment" module 
      before loading Request.so or Cookie.so?

    * Figure out how to bundle a CPAN release.

BUGS:

  XXX


WISH LIST:

    * I [joes] wish folks would contribute some glue code for
      one of these:

      - php, 
      - mod_tcl, 
      - mod_python, 
      - mod_jk, 
      - mod_ruby,
      - mod_parrot.

    * Someone should also adopt env/libapreq_cgi.c and ensure it
      doesn't fall into disrepair by adding some tests to env/t.
